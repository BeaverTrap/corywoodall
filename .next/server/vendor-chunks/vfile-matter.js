"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/vfile-matter";
exports.ids = ["vendor-chunks/vfile-matter"];
exports.modules = {

/***/ "(ssr)/./node_modules/vfile-matter/lib/index.js":
/*!************************************************!*\
  !*** ./node_modules/vfile-matter/lib/index.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   matter: () => (/* binding */ matter)\n/* harmony export */ });\n/* harmony import */ var yaml__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! yaml */ \"(ssr)/./node_modules/yaml/dist/index.js\");\n/**\n * @import {VFile} from 'vfile'\n * @import {\n *   DocumentOptions,\n *   ParseOptions,\n *   SchemaOptions,\n *   ToJSOptions as ToJsOptions\n * } from 'yaml'\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [strip=false]\n *   Remove the YAML front matter from the file (default: `false`).\n * @property {Readonly<YamlOptions> | null | undefined} [yaml={}]\n *   Configuration for the YAML parser, passed to `yaml` as `x` in\n *   `yaml.parse('', x)` (default: `{}`).\n */\n\n/**\n * @template Type\n *   Type.\n * @typedef {{[Key in keyof Type]: Type[Key]} & {}} Prettify\n *   Flatten a TypeScript record.\n */\n\n/**\n * @typedef {Prettify<DocumentOptions & ParseOptions & SchemaOptions & ToJsOptions>} YamlOptions\n *   Options for the YAML parser.\n *\n *   Equivalent to `DocumentOptions`, `ParseOptions`, `SchemaOptions`, and `ToJsOptions`.\n */\n\n\n\nconst regex = /^---(?:\\r?\\n|\\r)(?:([\\s\\S]*?)(?:\\r?\\n|\\r))?---(?:\\r?\\n|\\r|$)/\n\n/** @type {Readonly<Options>} */\nconst emptyOptions = {}\n/** @type {Readonly<YamlOptions>} */\nconst emptyYamlOptions = {}\n\n/**\n * Parse the YAML front matter in a file and expose it as `file.data.matter`.\n *\n * If no matter is found in the file, nothing happens, except that\n * `file.data.matter` is set to an empty object (`{}`).\n *\n * If the file value is an `Uint8Array`, assumes it is encoded in UTF-8.\n *\n * @param {VFile} file\n *   Virtual file.\n * @param {Readonly<Options> | null | undefined} [options={}]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nfunction matter(file, options) {\n  const options_ = options || emptyOptions\n  const strip = options_.strip\n  const yamlOptions = options_.yaml || emptyYamlOptions\n  let document = String(file)\n  const match = regex.exec(document)\n\n  if (match) {\n    file.data.matter = yaml__WEBPACK_IMPORTED_MODULE_0__.parse(match[1] || '', yamlOptions) || {}\n\n    if (strip) {\n      document = document.slice(match[0].length)\n\n      file.value =\n        file.value && typeof file.value === 'object'\n          ? new TextEncoder().encode(document)\n          : document\n    }\n  } else {\n    file.data.matter = {}\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdmZpbGUtbWF0dGVyL2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0EsWUFBWSxPQUFPO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsY0FBYyw0QkFBNEI7QUFDMUM7QUFDQSxjQUFjLDBDQUEwQyxRQUFRO0FBQ2hFO0FBQ0Esc0NBQXNDO0FBQ3RDOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsZ0NBQWdDLE1BQU07QUFDcEQ7QUFDQTs7QUFFQTtBQUNBLGFBQWEsd0VBQXdFO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBOztBQUV1Qjs7QUFFdkI7O0FBRUEsV0FBVyxtQkFBbUI7QUFDOUI7QUFDQSxXQUFXLHVCQUF1QjtBQUNsQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRDtBQUNwRDtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEI7QUFDQSxXQUFXLHNDQUFzQyxXQUFXO0FBQzVEO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSx1QkFBdUIsdUNBQVU7O0FBRWpDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jb3J5LXdvb2RhbGwtcG9ydGZvbGlvLy4vbm9kZV9tb2R1bGVzL3ZmaWxlLW1hdHRlci9saWIvaW5kZXguanM/YTEwYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBpbXBvcnQge1ZGaWxlfSBmcm9tICd2ZmlsZSdcbiAqIEBpbXBvcnQge1xuICogICBEb2N1bWVudE9wdGlvbnMsXG4gKiAgIFBhcnNlT3B0aW9ucyxcbiAqICAgU2NoZW1hT3B0aW9ucyxcbiAqICAgVG9KU09wdGlvbnMgYXMgVG9Kc09wdGlvbnNcbiAqIH0gZnJvbSAneWFtbCdcbiAqL1xuXG4vKipcbiAqIEB0eXBlZGVmIE9wdGlvbnNcbiAqICAgQ29uZmlndXJhdGlvbiAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtib29sZWFuIHwgbnVsbCB8IHVuZGVmaW5lZH0gW3N0cmlwPWZhbHNlXVxuICogICBSZW1vdmUgdGhlIFlBTUwgZnJvbnQgbWF0dGVyIGZyb20gdGhlIGZpbGUgKGRlZmF1bHQ6IGBmYWxzZWApLlxuICogQHByb3BlcnR5IHtSZWFkb25seTxZYW1sT3B0aW9ucz4gfCBudWxsIHwgdW5kZWZpbmVkfSBbeWFtbD17fV1cbiAqICAgQ29uZmlndXJhdGlvbiBmb3IgdGhlIFlBTUwgcGFyc2VyLCBwYXNzZWQgdG8gYHlhbWxgIGFzIGB4YCBpblxuICogICBgeWFtbC5wYXJzZSgnJywgeClgIChkZWZhdWx0OiBge31gKS5cbiAqL1xuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUeXBlXG4gKiAgIFR5cGUuXG4gKiBAdHlwZWRlZiB7e1tLZXkgaW4ga2V5b2YgVHlwZV06IFR5cGVbS2V5XX0gJiB7fX0gUHJldHRpZnlcbiAqICAgRmxhdHRlbiBhIFR5cGVTY3JpcHQgcmVjb3JkLlxuICovXG5cbi8qKlxuICogQHR5cGVkZWYge1ByZXR0aWZ5PERvY3VtZW50T3B0aW9ucyAmIFBhcnNlT3B0aW9ucyAmIFNjaGVtYU9wdGlvbnMgJiBUb0pzT3B0aW9ucz59IFlhbWxPcHRpb25zXG4gKiAgIE9wdGlvbnMgZm9yIHRoZSBZQU1MIHBhcnNlci5cbiAqXG4gKiAgIEVxdWl2YWxlbnQgdG8gYERvY3VtZW50T3B0aW9uc2AsIGBQYXJzZU9wdGlvbnNgLCBgU2NoZW1hT3B0aW9uc2AsIGFuZCBgVG9Kc09wdGlvbnNgLlxuICovXG5cbmltcG9ydCB5YW1sIGZyb20gJ3lhbWwnXG5cbmNvbnN0IHJlZ2V4ID0gL14tLS0oPzpcXHI/XFxufFxccikoPzooW1xcc1xcU10qPykoPzpcXHI/XFxufFxccikpPy0tLSg/Olxccj9cXG58XFxyfCQpL1xuXG4vKiogQHR5cGUge1JlYWRvbmx5PE9wdGlvbnM+fSAqL1xuY29uc3QgZW1wdHlPcHRpb25zID0ge31cbi8qKiBAdHlwZSB7UmVhZG9ubHk8WWFtbE9wdGlvbnM+fSAqL1xuY29uc3QgZW1wdHlZYW1sT3B0aW9ucyA9IHt9XG5cbi8qKlxuICogUGFyc2UgdGhlIFlBTUwgZnJvbnQgbWF0dGVyIGluIGEgZmlsZSBhbmQgZXhwb3NlIGl0IGFzIGBmaWxlLmRhdGEubWF0dGVyYC5cbiAqXG4gKiBJZiBubyBtYXR0ZXIgaXMgZm91bmQgaW4gdGhlIGZpbGUsIG5vdGhpbmcgaGFwcGVucywgZXhjZXB0IHRoYXRcbiAqIGBmaWxlLmRhdGEubWF0dGVyYCBpcyBzZXQgdG8gYW4gZW1wdHkgb2JqZWN0IChge31gKS5cbiAqXG4gKiBJZiB0aGUgZmlsZSB2YWx1ZSBpcyBhbiBgVWludDhBcnJheWAsIGFzc3VtZXMgaXQgaXMgZW5jb2RlZCBpbiBVVEYtOC5cbiAqXG4gKiBAcGFyYW0ge1ZGaWxlfSBmaWxlXG4gKiAgIFZpcnR1YWwgZmlsZS5cbiAqIEBwYXJhbSB7UmVhZG9ubHk8T3B0aW9ucz4gfCBudWxsIHwgdW5kZWZpbmVkfSBbb3B0aW9ucz17fV1cbiAqICAgQ29uZmlndXJhdGlvbiAob3B0aW9uYWwpLlxuICogQHJldHVybnMge3VuZGVmaW5lZH1cbiAqICAgTm90aGluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1hdHRlcihmaWxlLCBvcHRpb25zKSB7XG4gIGNvbnN0IG9wdGlvbnNfID0gb3B0aW9ucyB8fCBlbXB0eU9wdGlvbnNcbiAgY29uc3Qgc3RyaXAgPSBvcHRpb25zXy5zdHJpcFxuICBjb25zdCB5YW1sT3B0aW9ucyA9IG9wdGlvbnNfLnlhbWwgfHwgZW1wdHlZYW1sT3B0aW9uc1xuICBsZXQgZG9jdW1lbnQgPSBTdHJpbmcoZmlsZSlcbiAgY29uc3QgbWF0Y2ggPSByZWdleC5leGVjKGRvY3VtZW50KVxuXG4gIGlmIChtYXRjaCkge1xuICAgIGZpbGUuZGF0YS5tYXR0ZXIgPSB5YW1sLnBhcnNlKG1hdGNoWzFdIHx8ICcnLCB5YW1sT3B0aW9ucykgfHwge31cblxuICAgIGlmIChzdHJpcCkge1xuICAgICAgZG9jdW1lbnQgPSBkb2N1bWVudC5zbGljZShtYXRjaFswXS5sZW5ndGgpXG5cbiAgICAgIGZpbGUudmFsdWUgPVxuICAgICAgICBmaWxlLnZhbHVlICYmIHR5cGVvZiBmaWxlLnZhbHVlID09PSAnb2JqZWN0J1xuICAgICAgICAgID8gbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKGRvY3VtZW50KVxuICAgICAgICAgIDogZG9jdW1lbnRcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgZmlsZS5kYXRhLm1hdHRlciA9IHt9XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/vfile-matter/lib/index.js\n");

/***/ })

};
;